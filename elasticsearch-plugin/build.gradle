plugins {
    id 'java'
}

group 'shineware'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.current()
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    includeCompile
}

project.ext {
    elist = new HashSet<File>()
}

task makePlugin(type: Zip) {
    println "Making Elasticsearch Plugin"
    dependsOn(":elasticsearch-plugin:build")
    from {
        configurations.includeCompile.collect {
            if (it.isDirectory()) {
                return it
            } else {
                if (!project.elist.contains(it)) {
                    project.elist.add(it)
                    if (it.name == "core.jar" || it.name == "commons-1.0.1.jar" || it.name == "aho-corasick-1.1.0.jar") {
                        include it.name
                        println "Archiving "+it.name
                    }
                }
                return it
            }
        }
    }

    from("build/libs/") {
        include "*"
    }
    from("src/main/resources/") {
        include "*"
    }
    archiveFileName = 'komoran-tokenizer' + '.zip'
    destinationDirectory = file('.')
}


dependencies {
    includeCompile 'com.github.shineware:commons:1.0.1'
    includeCompile 'com.github.shineware:aho-corasick:1.1.0'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '8.4.0'
    testImplementation group: 'org.apache.lucene', name: 'lucene-test-framework', version: '8.4.0'
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.6.2'
    includeCompile project(':core')
    configurations.implementation.extendsFrom(configurations.includeCompile)
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"